name: CI checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      # pipでPoetryをインストール
      run: pip install poetry

    # --- キャッシュで高速化 (Poetryの仮想環境のキャッシュ) ---
    - name: Cache Poetry dependencies
      uses: actions/cache@v4
      with:
        # Poetryが仮想環境を格納する場所をキャッシュする
        path: ~/.cache/pypoetry/virtualenvs
        # poetry.lockの内容が変わったらキーも変わるようにする
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: |
        poetry lock
        poetry install

    # --- Lint & Format check ---
    # ruff checkはLintとフォーマット違反の両方をチェック
    - name: Run ruff (Check)
      run: poetry run ruff check .
      
    # --- Type check ---
    - name: Run mypy
      run: poetry run mypy .

    # --- Tests ---
    - name: Run pytest
      # resources.files()の動作を確実にするため、モジュール実行に戻す
      run: poetry run python -m pytest